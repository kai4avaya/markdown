import{a as d}from"./index-CD6BEcde.js";class f{constructor(){this.tree=null,this.outlineContainer=null,this.initialized=!1}initialize(){this.initialized||(this.outlineContainer=document.getElementById("outline-list"),this.setupTree(),this.initialized=!0)}setupTree(){this.outlineContainer.innerHTML="";const e=document.createElement("div");e.id="outline-tree",e.className="outline-tree-container",this.outlineContainer.appendChild(e),this.tree=$(e).fancytree({source:[],activate:(t,i)=>{this.handleNodeClick(i.node)},click:(t,i)=>!1,renderNode:(t,i)=>{const n=i.node,a=$(n.span);a.find(".fancytree-title").addClass(`heading-level-${n.data.level||1}`),n.data.line&&a.find(".fancytree-title").append(`<span class="line-number">:${n.data.line}</span>`)},autoScroll:!0,clickFolderMode:2,debugLevel:0,icon:(t,i)=>"fa fa-file-text",titlesTabbable:!0,lazyLoad:!1})}updateOutline(){const e=d.getEditor();if(!e||!this.tree){this.showMessage("Editor not ready.");return}const t=e.getMarkdown(),i=this.parseMarkdownToTree(t);if(i.length===0){this.showMessage(t.trim()===""?"Start typing headings to see an outline.":"No headings found.");return}this.tree.fancytree("getTree").reload(i),this.tree.fancytree("getTree").visit(function(n){n.hasChildren()&&n.setExpanded(!0)})}parseMarkdownToTree(e){const t=e.split(`
`),i=/^(#+)\s+(.*)/,n=[],a=[{level:0,children:n}];return t.forEach((c,h)=>{const l=c.match(i);if(l){const r=l[1].length,u=l[2].trim(),s=h+1,o={title:u,key:`heading-${s}`,data:{level:r,line:s,type:"heading"},children:[]};for(;a.length>1&&a[a.length-1].level>=r;)a.pop();a[a.length-1].children.push(o),a.push({level:r,children:o.children})}}),n}handleNodeClick(e){if(e.data&&e.data.line){const t=d.getEditor();t&&(t.setSelection([e.data.line,1],[e.data.line,1]),t.focus())}}showMessage(e){this.outlineContainer.innerHTML=`<div class="outline-message">${e}</div>`}expandAll(){this.tree&&this.tree.fancytree("getTree").expandAll()}collapseAll(){this.tree&&this.tree.fancytree("getTree").collapseAll()}getTree(){return this.tree}destroy(){this.tree&&(this.tree.fancytree("destroy"),this.tree=null),this.initialized=!1}}const v=new f;export{f as OutlineTree,v as outlineTree};
